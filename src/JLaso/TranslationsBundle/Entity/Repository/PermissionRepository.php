<?php

namespace JLaso\TranslationsBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;
use JLaso\TranslationsBundle\Entity\Permission;
use JLaso\TranslationsBundle\Entity\Project;
use JLaso\TranslationsBundle\Entity\User;

/**
 * PermissionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PermissionRepository extends EntityRepository
{
    public function findAllProjectsForUserQuery(User $user)
    {
        $em = $this->getEntityManager();

        $queryBuilder = $em->createQueryBuilder();
        $queryBuilder->select('p')
            ->from('TranslationsBundle:Permission', 'p')
            ->where('p.user = :user')
            ->setParameter('user', $user)
        ;

        return $queryBuilder->getQuery();
    }

    /**
     * @param User $user
     *
     * @return Project[]
     */
    public function findAllProjectsForUser(User $user)
    {
        return $this->findAllProjectsForUserQuery($user)->getResult();
    }

    /**
     * @param Project $project
     * @param User    $user
     *
     * @return Query
     */
    public function findPermissionForProjectAndUserQuery(Project $project, User $user)
    {
        $em = $this->getEntityManager();

        $queryBuilder = $em->createQueryBuilder();
        $queryBuilder->select('p')
            ->from('TranslationsBundle:Permission', 'p')
            ->where('p.user = :user and p.project = :project')
            ->setParameters(array(
                    'user'    => $user,
                    'project' => $project,
                )
            )
        ;

        return $queryBuilder->getQuery();
    }

    /**
     * @param Project $project
     * @param User    $user
     *
     * @return Permission
     */
    public function findPermissionForProjectAndUser(Project $project, User $user)
    {
        return $this->findPermissionForProjectAndUserQuery($project, $user)->getOneOrNullResult();
    }
}
